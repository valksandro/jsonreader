{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/ar-modal/components/Modal.ts.ModalHeader.html","webpack:///src/app/ar-modal/components/Modal.ts.ModalContent.html","webpack:///src/app/ar-modal/components/Modal.ts.ModalFooter.html","webpack:///src/app/ar-modal/components/modal.html","webpack:///src/app/ar-modal/components/Modal.ts","webpack:///src/app/ar-modal/components/RouteModal.ts","webpack:///src/app/ar-modal/components/index.ts","webpack:///src/app/components/main/components/children/children.component.html","webpack:///src/app/components/main/components/children/children.component.ts","webpack:///src/app/components/main/components/dropdown-items/dropdown-items.component.html","webpack:///src/app/components/main/components/dropdown-items/dropdown-items.component.ts","webpack:///src/app/components/main/components/field-properties/field-properties.component.html","webpack:///src/app/components/main/components/field-properties/field-properties.component.ts","webpack:///src/app/components/main/components/main/main.component.html","webpack:///src/app/components/main/components/main/main.component.ts","webpack:///src/app/components/main/components/triggers/triggers.component.html","webpack:///src/app/components/main/components/triggers/triggers.component.ts","webpack:///src/app/components/main/main.module.ts","webpack:///src/app/components/main/model/Translation.ts","webpack:///src/app/components/main/service/field.service.ts","webpack:///src/app/components/search-json/search-json.component.html","webpack:///src/app/components/search-json/search-json.component.ts","webpack:///src/app/components/search-json/search-json.module.ts","webpack:///src/app/custom-form-utils/components/modal-children/modal-children.component.html","webpack:///src/app/custom-form-utils/components/modal-children/modal-children.component.ts","webpack:///src/app/custom-form-utils/components/modal-new-field/modal-new-field.component.html","webpack:///src/app/custom-form-utils/components/modal-new-field/modal-new-field.component.ts","webpack:///src/app/custom-form-utils/components/modal-translations/modal-translations.component.html","webpack:///src/app/custom-form-utils/components/modal-translations/modal-translations.component.ts","webpack:///src/app/custom-form-utils/custom-form-utils.module.ts","webpack:///src/app/domain/BooleanField.ts","webpack:///src/app/domain/BooleanWithChildrenField.ts","webpack:///src/app/domain/CheckBoxField.ts","webpack:///src/app/domain/ChecklListField.ts","webpack:///src/app/domain/DropdownField.ts","webpack:///src/app/domain/DropdownWithChildren.ts","webpack:///src/app/domain/ImageField.ts","webpack:///src/app/domain/NumberField.ts","webpack:///src/app/domain/SignatureField.ts","webpack:///src/app/domain/SlideField.ts","webpack:///src/app/domain/TextField.ts","webpack:///src/app/domain/field-base.ts","webpack:///src/app/domain/field.ts","webpack:///src/app/pipes/pipes.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","AppComponent","title","AppModule","ModalHeader","ModalContent","ModalFooter","Modal","closeOnEscape","closeOnOutsideClick","hideCloseButton","backdrop","onOpen","onClose","onSubmit","isOpened","createBackDrop","document","body","className","replace","backdropElement","parentNode","removeChild","args","emit","appendChild","window","setTimeout","modalRoot","nativeElement","focus","event","stopPropagation","createElement","classList","add","RouteModal","router","activatedRoute","open","cancelUrl","navigationExtras","cancelUrlExtras","relative","relativeTo","Object","assign","navigate","history","back","ModalModule","ChildrenComponent","children","child","newValue","target","value","index","indexOf","push","DropdownItemsComponent","items","item","FieldPropertiesComponent","fieldService","selectProperty","originalOrder","a","b","property","propertySelected","getType","field","key","Number","parseInt","includes","getPropertyType","MainComponent","sanitizer","showOptionsField","dropdownItens","theJSON","JSON","stringify","file","uri","bypassSecurityTrustUrl","encodeURIComponent","downloadJsonHref","fieldSelected","fieldData","createField","type","fieldName","name","fields","splice","newFields","filter","fld","TriggersComponent","triggers","MainModule","Translation","label","FieldService","result","SearchJsonComponent","onSetfields","onFileUpload","disabled","querySelector","click","files","fileName","currentTarget","uploadDocument","fileReader","FileReader","onload","jsonObject","parse","toString","map","readAsText","SearchJsonComponentModule","ModalChildrenComponent","formBuilder","form","group","orderResume","groupResume","display","required","mask","editable","size","capitalization","patchValue","modalChildren","close","ModalNewFieldComponent","confirm","modalNewField","valid","ModalTranslationsComponent","translations","labels","forEach","modalTranslations","CustomFormUtilsModule","BooleanField","BooleanWithChildrenField","CheckBoxField","ChecklListField","DropdownField","isSingleSelection","DropdownWithChildren","ImageField","NumberField","rightSymbol","SignatureField","SlideField","min","max","division","TextField","FieldBase","Field","PipesModule","environment","production","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<app-server></app-server>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app-metadata';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MainModule } from './components/main/main.module';\r\nimport { SearchJsonComponentModule } from './components/search-json/search-json.module';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MainModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    SearchJsonComponentModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<ng-content></ng-content>","<ng-content></ng-content>","<ng-content></ng-content>","<div class=\"modal\" \r\n     tabindex=\"-1\"\r\n     role=\"dialog\"\r\n     #modalRoot\r\n     (keydown.esc)=\"closeOnEscape ? close() : 0\" [ngClass]=\"{ in: isOpened && false, fade: isOpened && false }\"\r\n     [ngStyle]=\"{ display: isOpened ? 'block' : 'none' }\"\r\n     (click)=\"closeOnOutsideClick ? close() : 0\">\r\n    <div [class]=\"'modal-dialog ' + modalClass\" (click)=\"preventClosing($event)\">\r\n        <div class=\"modal-content\" tabindex=\"0\" *ngIf=\"isOpened\">\r\n            <div class=\"modal-header\">\r\n                <button *ngIf=\"!hideCloseButton\" type=\"button\" class=\"close\" data-dismiss=\"modal\" [attr.aria-label]=\"cancelButtonLabel || 'Close'\" (click)=\"close()\"><span aria-hidden=\"true\">&times;</span></button>\r\n                <h4 class=\"modal-title\" *ngIf=\"title\">{{ title }}</h4>\r\n                <ng-content select=\"modal-header\"></ng-content>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <ng-content select=\"modal-content\"></ng-content>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <ng-content select=\"modal-footer\"></ng-content>\r\n                <button *ngIf=\"cancelButtonLabel\" type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"close()\">{{ cancelButtonLabel }}</button>\r\n                <button *ngIf=\"submitButtonLabel\" type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit.emit(undefined)\">{{ submitButtonLabel }}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import {Component, Input, Output, EventEmitter, ElementRef, ViewChild} from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"modal-header\",\r\n    template: `<ng-content></ng-content>`\r\n})\r\nexport class ModalHeader {\r\n\r\n}\r\n\r\n@Component({\r\n    selector: \"modal-content\",\r\n    template: `<ng-content></ng-content>`\r\n})\r\nexport class ModalContent {\r\n\r\n}\r\n\r\n@Component({\r\n    selector: \"modal-footer\",\r\n    template: `<ng-content></ng-content>`\r\n})\r\nexport class ModalFooter {\r\n\r\n}\r\n\r\n@Component({\r\n    selector: \"modal\",\r\n    templateUrl: \"./modal.html\",\r\n})\r\nexport class Modal {\r\n    @Input()\r\n    public modalClass: string;\r\n\r\n    @Input()\r\n    public closeOnEscape: boolean = true;\r\n\r\n    @Input()\r\n    public closeOnOutsideClick: boolean = true;\r\n\r\n    @Input()\r\n    public title: string;\r\n\r\n    @Input()\r\n    public hideCloseButton = false;\r\n\r\n    @Input()\r\n    public cancelButtonLabel: string;\r\n\r\n    @Input()\r\n    public submitButtonLabel: string;\r\n\r\n    @Input()\r\n    public backdrop:boolean = true;\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Outputs\r\n    // -------------------------------------------------------------------------\r\n\r\n    @Output()\r\n    public onOpen = new EventEmitter(false);\r\n\r\n    @Output()\r\n    public onClose = new EventEmitter(false);\r\n\r\n    @Output()\r\n    public onSubmit = new EventEmitter(false);\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public properties\r\n    // -------------------------------------------------------------------------\r\n\r\n    public isOpened = false;\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Private properties\r\n    // -------------------------------------------------------------------------\r\n\r\n\r\n\r\n    @ViewChild(\"modalRoot\", {static: false})\r\n    public modalRoot: ElementRef;\r\n\r\n    private backdropElement: HTMLElement;\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor() {\r\n        this.createBackDrop();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Lifecycle Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    ngOnDestroy() {\r\n        document.body.className = document.body.className.replace(/modal-open\\b/, \"\");\r\n        if (this.backdropElement && this.backdropElement.parentNode === document.body)\r\n            document.body.removeChild(this.backdropElement);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    open(...args: any[]) {\r\n        if (this.isOpened)\r\n            return;\r\n        \r\n        this.isOpened = true;\r\n        this.onOpen.emit(args);\r\n        document.body.appendChild(this.backdropElement);\r\n        window.setTimeout(() => this.modalRoot.nativeElement.focus(), 0);\r\n        document.body.className += \" modal-open\";\r\n    }\r\n\r\n    close(...args: any[]) {\r\n        if (!this.isOpened)\r\n            return;\r\n\r\n        this.isOpened = false;\r\n        this.onClose.emit(args);\r\n        document.body.removeChild(this.backdropElement);\r\n        document.body.className = document.body.className.replace(/modal-open\\b/, \"\");\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Private Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    public preventClosing(event: MouseEvent) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private createBackDrop() {\r\n        this.backdropElement = document.createElement(\"div\");\r\n        this.backdropElement.classList.add(\"fade\");\r\n        this.backdropElement.classList.add(\"in\");\r\n        if(this.backdrop) {\r\n            this.backdropElement.classList.add(\"modal-backdrop\");\r\n        }\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output, EventEmitter, ElementRef, ViewChild, OnDestroy, OnInit} from \"@angular/core\";\r\nimport {NavigationExtras} from \"@angular/router\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"route-modal\",\r\n    template: `\r\n<div class=\"modal route-modal\" \r\n     tabindex=\"-1\"\r\n     role=\"dialog\"\r\n     #modalRoot\r\n     (keydown.esc)=\"closeOnEscape ? close() : 0\"\r\n     [ngClass]=\"{ in: isOpened, fade: isOpened }\"\r\n     [ngStyle]=\"{ display: isOpened ? 'block' : 'none' }\"\r\n     (click)=\"closeOnOutsideClick ? close() : 0\">\r\n    <div [class]=\"'modal-dialog ' + modalClass\" (click)=\"preventClosing($event)\">\r\n        <div class=\"modal-content\" tabindex=\"0\" *ngIf=\"isOpened\">\r\n            <div class=\"modal-header\">\r\n                <button *ngIf=\"!hideCloseButton\" type=\"button\" class=\"close\" data-dismiss=\"modal\" [attr.aria-label]=\"cancelButtonLabel || 'Close'\" (click)=\"close()\"><span aria-hidden=\"true\">&times;</span></button>\r\n                <h4 class=\"modal-title\" *ngIf=\"title\">{{ title }}</h4>\r\n                <ng-content select=\"modal-header\"></ng-content>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <ng-content select=\"modal-content\"></ng-content>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <ng-content select=\"modal-footer\"></ng-content>\r\n                <button *ngIf=\"cancelButtonLabel\" type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"close()\">{{ cancelButtonLabel }}</button>\r\n                <button *ngIf=\"submitButtonLabel\" type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit.emit(undefined)\">{{ submitButtonLabel }}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n})\r\nexport class RouteModal implements OnInit, OnDestroy {\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Inputs\r\n    // -------------------------------------------------------------------------\r\n\r\n    @Input()\r\n    public cancelUrl: any[];\r\n\r\n    @Input()\r\n    public cancelUrlExtras: { relative: boolean } & NavigationExtras;\r\n\r\n    @Input()\r\n    public modalClass: string;\r\n\r\n    @Input()\r\n    public closeOnEscape: boolean = true;\r\n\r\n    @Input()\r\n    public closeOnOutsideClick: boolean = true;\r\n\r\n    @Input()\r\n    public title: string;\r\n\r\n    @Input()\r\n    public hideCloseButton = false;\r\n\r\n    @Input()\r\n    public cancelButtonLabel: string;\r\n\r\n    @Input()\r\n    public submitButtonLabel: string;\r\n\r\n    @Input()\r\n    public backdrop:boolean = true;\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Outputs\r\n    // -------------------------------------------------------------------------\r\n\r\n    @Output()\r\n    public onOpen = new EventEmitter(false);\r\n\r\n    @Output()\r\n    public onClose = new EventEmitter(false);\r\n\r\n    @Output()\r\n    public onSubmit = new EventEmitter(false);\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Private properties\r\n    // -------------------------------------------------------------------------\r\n\r\n    @ViewChild(\"modalRoot\", {static: false})\r\n    public modalRoot: ElementRef;\r\n\r\n    public isOpened = false;\r\n\r\n    private backdropElement: HTMLElement;\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor(private router: Router,\r\n                private activatedRoute: ActivatedRoute) {\r\n        this.createBackDrop();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Lifecycle Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    ngOnInit() {\r\n        this.open();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        document.body.className = document.body.className.replace(/modal-open\\b/, \"\");\r\n        if (this.backdropElement && this.backdropElement.parentNode === document.body)\r\n            document.body.removeChild(this.backdropElement);\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    open(...args: any[]) {\r\n        if (this.isOpened)\r\n            return;\r\n        \r\n        this.isOpened = true;\r\n        this.onOpen.emit(args);\r\n        document.body.appendChild(this.backdropElement);\r\n        window.setTimeout(() => this.modalRoot.nativeElement.focus(), 0);\r\n        document.body.className += \" modal-open\";\r\n    }\r\n\r\n    close(...args: any[]) {\r\n        if (!this.isOpened)\r\n            return;\r\n\r\n        this.isOpened = false;\r\n        this.onClose.emit(args);\r\n        document.body.className = document.body.className.replace(/modal-open\\b/, \"\");\r\n\r\n        if (this.cancelUrl) {\r\n            let navigationExtras: NavigationExtras = { };\r\n            if (this.cancelUrlExtras) {\r\n                if (this.cancelUrlExtras.relative) {\r\n                    navigationExtras.relativeTo = this.activatedRoute;\r\n                }\r\n                navigationExtras = (Object as any).assign(navigationExtras, this.cancelUrlExtras);\r\n            }\r\n            this.router.navigate(this.cancelUrl, navigationExtras);\r\n\r\n        } else {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Private Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    public preventClosing(event: MouseEvent) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private createBackDrop() {\r\n        this.backdropElement = document.createElement(\"div\");\r\n        this.backdropElement.classList.add(\"fade\");\r\n        this.backdropElement.classList.add(\"in\");\r\n        if(this.backdrop) {\r\n            this.backdropElement.classList.add(\"modal-backdrop\");\r\n        }\r\n    }\r\n\r\n}\r\n","import {Modal,ModalHeader,ModalContent,ModalFooter} from \"./Modal\";\r\nimport {RouteModal} from \"./RouteModal\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from '@angular/common';\r\n\r\nexport { Modal, ModalContent, ModalFooter, ModalHeader } from \"./Modal\";\r\nexport { RouteModal } from \"./RouteModal\";\r\n\r\n@NgModule({\r\n    imports: [ CommonModule ],\r\n    declarations: [\r\n        Modal,\r\n        RouteModal,\r\n        ModalHeader,\r\n        ModalContent,\r\n        ModalFooter,\r\n    ],\r\n    exports: [\r\n        Modal,\r\n        RouteModal,\r\n        ModalHeader,\r\n        ModalContent,\r\n        ModalFooter,\r\n    ],\r\n})\r\nexport class ModalModule {\r\n\r\n}\r\n","<div style=\"max-height: 300px; margin-bottom: 50px\">\r\n    <div class=\"table-responsive\" style=\"max-height: 250px; margin-bottom: 5px\">\r\n        <table class=\"table table-bordered table-striped table-sm mt-4 \">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"min-width: 120px;\">label</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let child of children\" style=\"cursor: pointer;\" (click)=\"modalChildren.open()\">\r\n                    <td style=\"height: 40px;\">\r\n                        <a (click)=\"modalChildren.open()\" class=\"action-link\">\r\n                            <i class=\"fa fa-pencil fa\" style=\"margin-right: 5px;\"></i>\r\n                        </a>\r\n                        {{child.fieldName}} \r\n                    </td>\r\n                    <modal-children #modalChildren [child]=\"child\"></modal-children>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div>\r\n        <button class=\"btn btn-success\" (click)=\"addChild()\">Adicionar Child</button>\r\n    </div>\r\n    \r\n</div>\r\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { TextField } from 'src/app/domain/TextField';\r\nimport { Modal } from 'src/app/ar-modal/components';\r\n\r\n@Component({\r\n  selector: 'children',\r\n  templateUrl: './children.component.html',\r\n  styleUrls: ['./children.component.css']\r\n})\r\nexport class ChildrenComponent implements OnInit {\r\n\r\n  @Input(\"children\") children = [];\r\n  @ViewChild('modalChildren') modalChildren:Modal\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  changeChild(child, event) {\r\n    const newValue = event.target.value;\r\n    const index = this.children.indexOf(child);\r\n    this.children[index] = newValue;\r\n  }\r\n\r\n  addChild() {\r\n    const child = new TextField();\r\n    this.children.push(child);\r\n  }\r\n}\r\n","<div class=\"dropdown-items\">\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-bordered table-striped table-sm mt-4 \">\r\n            <thead>\r\n                <tr>\r\n                    <th>label</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of items\">\r\n                    <td><input class=\"form-control\" type=\"text\" [value]=\"item\" (change)=\"changeItem(item, $event)\"></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div>\r\n        <button class=\"btn btn-success\" (click)=\"items.push('')\">Adicionar item</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"modalTranslations.open()\">Traduções</button>\r\n        <modal-translations #modalTranslations [labels]=\"items\"></modal-translations>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dropdown-items',\r\n  templateUrl: './dropdown-items.component.html',\r\n  styleUrls: ['./dropdown-items.component.css']\r\n})\r\nexport class DropdownItemsComponent implements OnInit {\r\n\r\n  @Input(\"items\") items = [];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  changeItem(item, event) {\r\n    const newValue = event.target.value;\r\n    const index = this.items.indexOf(item);\r\n    this.items[index] = newValue;\r\n  }\r\n}\r\n","    <div class=\"table-responsive\" style=\"max-height: 300px; margin-bottom: 50px\">\r\n        <table class=\"table table-bordered table-striped table-sm mt-4 \">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"min-width: 120px;\">Propriedade</th>\r\n                    <th style=\"min-width: 120px;\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let property of field | keyvalue: originalOrder\" style=\"cursor: pointer;\"\r\n                (click)=\"onSelectProperty(property)\" [class.selected-row]=\"propertySelected && propertySelected == property\">\r\n                    <td>{{property.key}}</td>\r\n                    <td *ngIf=\"!isSpecial(property.key)\">\r\n                        <input class=\"form-control\" *ngIf=\"getType(property) == 'string'\" type=\"text\" [value]=\"property.value\" (change)=\"changeValue(property, $event)\" [attr.disabled]=\"property.key == 'type' ? true : null\" >\r\n                        <input class=\"form-control\" *ngIf=\"getType(property) == 'number'\" type=\"number\" [value]=\"property.value\" (change)=\"changeValue(property, $event)\" [attr.disabled]=\"property.key == 'type' ? true : null\" >\r\n                    \r\n                        <select class=\"form-control\" *ngIf=\"getType(property) == 'boolean'\" [value]=\"property.value\"  (change)=\"changeValue(property, $event)\">\r\n                            <option [value]=\"true\">True</option>\r\n                            <option [value]=\"false\">False</option>\r\n                        </select>\r\n                    \r\n                    </td>\r\n                    <td *ngIf=\"isSpecial(property.key)\" style=\"height: 40px; padding-left: 20px;\">\r\n                        <span>\r\n                            {{property.key}}\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { KeyValue } from '@angular/common';\r\nimport { TextField } from 'src/app/domain/TextField';\r\nimport { FieldService } from '../../service/field.service';\r\n\r\n@Component({\r\n  selector: 'field-properties',\r\n  templateUrl: './field-properties.component.html',\r\n  styleUrls: ['./field-properties.component.css']\r\n})\r\nexport class FieldPropertiesComponent implements OnInit {\r\n\r\n  @Input(\"field\") field;\r\n  @Output(\"selectProperty\") selectProperty = new EventEmitter;\r\n  propertySelected: any;\r\n  originalOrder = (a: KeyValue<number,string>, b: KeyValue<number,string>): number => {\r\n    return 0;\r\n  }\r\n  constructor(private fieldService: FieldService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSelectProperty(property){\r\n    this.selectProperty.emit(property);\r\n    this.propertySelected = property;\r\n  }\r\n\r\n  changeValue(property, event) {\r\n    if(this.getType(property) == \"number\")\r\n      this.field[property.key] = Number.parseInt(event.target.value);\r\n    else if(this.getType(property) == 'boolean')\r\n      this.field[property.key] = event.target.value == \"true\" ? true : false;\r\n    else\r\n    this.field[property.key] = event.target.value\r\n  }\r\n\r\n  isSpecial(key) {\r\n    const keys = [\"items\", \"triggers\", \"children\"];\r\n    return keys.includes(key);\r\n  }\r\n\r\n  getType(property) {\r\n    if(this.fieldService)\r\n      return this.fieldService.getPropertyType(property.key);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <app-search-json (onFileUpload)=\"onFileUpload($event)\"> </app-search-json>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"table-responsive\" *ngIf=\"file\">\r\n            <table class=\"table table-bordered table-striped table-sm mt-4 \">\r\n                <thead>\r\n                    <tr>\r\n                        <th style=\"min-width: 120px;\">Nome</th>\r\n                        <th style=\"min-width: 120px;\">Tipo</th>\r\n                        <th style=\"text-align: center;\">Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"file\">\r\n                    <tr *ngFor=\"let field of file.fields; let i = index\" style=\"cursor: pointer;\" \r\n                    (click)=\"selectField(field)\"\r\n                    (dblclick)=\"modalNewField.open()\"\r\n                        [class.selected-row]=\"fieldSelected == field\">\r\n                        <td>{{field.fieldName}}</td>\r\n                        <td>{{field['type']}}</td>\r\n                        <td align=\"center\" class=\"actions\">\r\n                            <a (click)=\"modalNewField.open()\" class=\"action-link action-link-plus\" data-toggle=\"tooltip\" title=\"Adicionar campo\">\r\n                                <i class=\"fa fa-plus-circle fa-2x\" ></i>\r\n                            </a>\r\n\r\n                            <a (click)=\"removeField(field)\" class=\"action-link\" data-toggle=\"tooltip\" title=\"Excluir\">\r\n                                <i class=\"fa fa-trash fa-2x\" style=\"color: #f86c6b;\"></i>\r\n                            </a>\r\n\r\n                            \r\n                        </td>\r\n                        <modal-new-field #modalNewField (confirm)=\"addField(i, $event)\"></modal-new-field>\r\n                    </tr>\r\n                    <tr *ngIf=\"file.fields.length == 0\">\r\n                        <td colspan=\"3\" align=\"center\">\r\n                            Nenhum campo neste arquivo\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"row\"  *ngIf=\"fieldSelected\">\r\n        <div class=\"col-6\" style=\"padding: 5px;\">\r\n            <field-properties [field]=\"fieldSelected\" (selectProperty)=\"selectProperty($event)\"></field-properties>\r\n        </div>\r\n        <div class=\"col-6\" style=\"padding: 5px;\" *ngIf=\"propertySelected && propertySelected.key == 'items'\">\r\n            <dropdown-items [items]=\"fieldSelected.items\"></dropdown-items>\r\n        </div>\r\n        <div class=\"col-6\" style=\"padding: 5px;\" *ngIf=\"propertySelected && propertySelected.key == 'triggers'\">\r\n            <triggers [triggers]=\"fieldSelected.triggers\"></triggers>\r\n        </div>\r\n        <div class=\"col-6\" style=\"padding: 5px;\" *ngIf=\"propertySelected && propertySelected.key == 'children'\">\r\n            <children [children]=\"fieldSelected.children\"></children>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"fieldSelected\">\r\n        <a class=\"btn btn-success\" (click)=\"generateJson()\" >Salvar</a>\r\n        <a *ngIf=\"downloadJsonHref\" class=\"btn btn-primary\" id=\"download\" title=\"Download JSON\" [href]=\"downloadJsonHref\"\r\n            download=\"download.json\">Download</a>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { KeyValue } from '@angular/common';\r\nimport { FieldService } from '../../service/field.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-server',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n  originalOrder = (a: KeyValue<number,string>, b: KeyValue<number,string>): number => {\r\n    return 0;\r\n  }\r\n  \r\n  downloadJsonHref: any;\r\n  file: any;\r\n  fieldSelected: any;\r\n  showOptionsField: boolean = false;\r\n  dropdownItens = [];\r\n  propertySelected: any;\r\n\r\n  constructor(private sanitizer: DomSanitizer, private fieldService: FieldService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  generateJson() {\r\n    var theJSON = JSON.stringify(this.file);\r\n    var uri = this.sanitizer.bypassSecurityTrustUrl(\"data:text/json;charset=UTF-8,\" + encodeURIComponent(theJSON));\r\n    this.downloadJsonHref = uri;\r\n  }\r\n\r\n  onFileUpload(file) {\r\n    this.file = file;\r\n  }\r\n\r\n  selectField(field) {\r\n    this.fieldSelected = field;\r\n    this.propertySelected = null;\r\n  }\r\n\r\n  selectProperty(property) {\r\n    this.propertySelected = property;\r\n  }\r\n\r\n  changeValue(property, event) {\r\n    this.fieldSelected[property.key] = event.target.value;\r\n  }\r\n\r\n  addField(index: number, fieldData) {\r\n    const field = this.fieldService.createField(fieldData.type);\r\n    field.fieldName = fieldData.name;\r\n    field.type = fieldData.type;\r\n    this.file.fields.splice(index, 0, field);\r\n    this.fieldSelected = field;\r\n  }\r\n\r\n  showOptions() {\r\n    this.showOptionsField = true;\r\n  }\r\n\r\n  removeField(field) {\r\n    let fields = this.file.fields;\r\n    const newFields = fields.filter(fld => fld != field);\r\n    this.file.fields = newFields;\r\n  }\r\n}\r\n","<div style=\"max-height: 300px; margin-bottom: 50px\">\r\n    <div class=\"table-responsive\" style=\"max-height: 250px; margin-bottom: 5px\">\r\n        <table class=\"table table-bordered table-striped table-sm mt-4 \">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"min-width: 120px;\">label</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let trigger of triggers\" style=\"cursor: pointer;\">\r\n                    <td><input type=\"text\" [value]=\"trigger\" (change)=\"changeTrigger(trigger, $event)\"></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div>\r\n        <button (click)=\"triggers.push('')\">Adicionar item</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'triggers',\r\n  templateUrl: './triggers.component.html',\r\n  styleUrls: ['./triggers.component.css']\r\n})\r\nexport class TriggersComponent implements OnInit {\r\n\r\n  @Input(\"triggers\") triggers = [];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  changeTrigger(item, event) {\r\n    const newValue = event.target.value;\r\n    const index = this.triggers.indexOf(item);\r\n    this.triggers[index] = newValue;\r\n  }\r\n}\r\n","import { SearchJsonComponentModule } from '../search-json/search-json.module';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputTextModule} from 'primeng/inputtext';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {TableModule} from 'primeng/table';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PipesModule } from 'src/app/pipes/pipes.module';\r\nimport { CustomFormUtilsModule } from 'src/app/custom-form-utils/custom-form-utils.module';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { DropdownItemsComponent } from './components/dropdown-items/dropdown-items.component';\r\nimport { FieldPropertiesComponent } from './components/field-properties/field-properties.component';\r\nimport { TriggersComponent } from './components/triggers/triggers.component';\r\nimport { ChildrenComponent } from './components/children/children.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    InputTextModule,\r\n    ButtonModule,\r\n    BrowserModule,\r\n    TableModule,\r\n    DropdownModule,\r\n    HttpClientModule,\r\n    SearchJsonComponentModule,\r\n    PipesModule,\r\n    CustomFormUtilsModule\r\n  ],\r\n  exports: [\r\n    MainComponent\r\n  ],\r\n  declarations: [MainComponent, DropdownItemsComponent, FieldPropertiesComponent, TriggersComponent, ChildrenComponent]\r\n})\r\nexport class MainModule {}","export class Translation {\r\n    label: string;\r\n    portuguese: string;\r\n    english: string;\r\n    spanish: string;\r\n\r\n    constructor(label: string) {\r\n        this.label = label;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { TextField } from 'src/app/domain/TextField';\r\nimport { BooleanField } from 'src/app/domain/BooleanField';\r\nimport { SlideField } from 'src/app/domain/SlideField';\r\nimport { NumberField } from 'src/app/domain/NumberField';\r\nimport { ImageField } from 'src/app/domain/ImageField';\r\nimport { SignatureField } from 'src/app/domain/SignatureField';\r\nimport { DropdownWithChildren } from 'src/app/domain/DropdownWithChildren';\r\nimport { BooleanWithChildrenField } from 'src/app/domain/BooleanWithChildrenField';\r\nimport { DropdownField } from 'src/app/domain/DropdownField';\r\nimport { CheckBoxField } from 'src/app/domain/CheckBoxField';\r\nimport { ChecklListField } from 'src/app/domain/ChecklListField';\r\nimport { group } from '@angular/animations';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FieldService {\r\n\r\n  constructor() { }\r\n\r\n  createField(type: string) {\r\n    let field;\r\n    switch (type) {\r\n      case \"text\":\r\n        field = new TextField();\r\n        break;\r\n\r\n      case \"bool\":\r\n        field = new BooleanField();\r\n        break;\r\n\r\n      case \"slide\":\r\n        field = new SlideField();\r\n        break;\r\n\r\n      case \"number\":\r\n        field = new NumberField();\r\n        break;\r\n\r\n      case \"signature\":\r\n        field = new SignatureField();\r\n        break;\r\n\r\n      case \"image\":\r\n        field = new ImageField();\r\n        break;\r\n\r\n      case \"dropdownwithchildren\":\r\n        field = new DropdownWithChildren();\r\n        break;\r\n\r\n      case \"boolwithchildren\":\r\n        field = new BooleanWithChildrenField();\r\n        break;\r\n\r\n      case \"dropdown\":\r\n        field = new DropdownField();\r\n        break;\r\n\r\n      case \"checkbox\":\r\n        field = new CheckBoxField();\r\n        break;\r\n\r\n      case \"checklist\":\r\n        field = new ChecklListField();\r\n        break;\r\n    }\r\n\r\n    return field;\r\n  }\r\n\r\n  getPropertyType(property) {\r\n    let result = \"string\";\r\n    switch (property) {\r\n      case \"group\":\r\n      case \"orderResume\":\r\n      case \"groupResume\":\r\n      case \"size\":\r\n        result = \"number\";\r\n        break;\r\n\r\n      case \"fieldName\":\r\n      case \"label\":\r\n      case \"type\":\r\n      case \"mask\":\r\n      case \"rightSymbol\":\r\n      case \"min\":\r\n      case \"max\":\r\n      case \"value\":\r\n      case \"division\":\r\n        result = \"string\";\r\n        break;\r\n\r\n      case \"display\":\r\n      case \"required\":\r\n      case \"isSingleSelection\":\r\n      case \"capitalization\":\r\n      case \"editable\":\r\n        result = \"boolean\";\r\n        break;\r\n\r\n      default:\r\n        result = \"object\";\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","<div class=\"column\">\r\n\r\n    <label class=\"label\" for=\"inputsm\">Arquivo JSON</label>\r\n    <div class=\"row\" style=\"padding-bottom: 10px;\">\r\n\r\n        <div class=\"col-md-11\">\r\n            <input type=\"file\" style=\"display:none\" (change)=\"handle($event)\" accept=\".json\">\r\n            <input class=\"form-control input-sm\" [(ngModel)]=\"fileName\" id=\"fileName\" type=\"text\">\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n            <span class=\"input-group-addon\" style=\"cursor: pointer;\">\r\n                <i class=\"fa fa-search\" style=\"font-size: 28px;\" aria-hidden=\"true\" (click)=\"openFile()\"></i>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Field } from 'src/app/domain/field';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-json',\r\n  templateUrl: './search-json.component.html',\r\n  styleUrls: ['./search-json.component.css']\r\n})\r\nexport class SearchJsonComponent implements OnInit {\r\n  @Input() fields: Field[] = [];\r\n  @Output() onSetfields = new EventEmitter();\r\n  @Output() onFileUpload = new EventEmitter();\r\n  public fileName: String;\r\n  jsonObject: Object;\r\n  text: string;\r\n  file: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openFile(){\r\n    document.querySelector('input').click()\r\n  }\r\n\r\n  handle(e) {\r\n    this.file = e.target.files[0];\r\n    this.fileName = e.currentTarget.value;\r\n    this.uploadDocument(this.file);\r\n  }\r\n  disabled: boolean = true;\r\n\r\n  uploadDocument(file) {\r\n    let fileReader = new FileReader();\r\n    fileReader.onload = (e) => {\r\n      this.jsonObject = JSON.parse(fileReader.result.toString());\r\n      this.fields = this.jsonObject['fields'].map(field => new Field(field['fieldName'], field['type'], this.jsonObject['fields'].filter(item=>item.fieldName == field['fieldName'])));\r\n      this.onSetfields.emit(this.fields);\r\n      this.onFileUpload.emit(this.jsonObject);\r\n    }\r\n    fileReader.readAsText(this.file);\r\n  }\r\n}\r\n","import { SearchJsonComponent } from './search-json.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputTextModule} from 'primeng/inputtext';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { TableModule} from 'primeng/table';\r\nimport { DropdownModule} from 'primeng/dropdown';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    InputTextModule,\r\n    ButtonModule,\r\n    BrowserModule,\r\n    TableModule,\r\n    DropdownModule,\r\n    HttpClientModule,\r\n  ],\r\n  exports: [\r\n    SearchJsonComponent\r\n  ],\r\n  declarations: [SearchJsonComponent]\r\n})\r\nexport class SearchJsonComponentModule {}","<modal #modalChildren>\r\n    <modal-content>\r\n        <form [formGroup]=\"form\" (submit)=\"save()\" #ngForm=\"ngForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"group\">group</label>\r\n                        <input type=\"text\" formControlName=\"group\" class=\"form-control\" id=\"group\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"orderResume\">orderResume</label>\r\n                        <input type=\"text\" formControlName=\"orderResume\" class=\"form-control\" id=\"orderResume\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"groupResume\">groupResume</label>\r\n                        <input type=\"text\" formControlName=\"groupResume\" class=\"form-control\" id=\"groupResume\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"fieldName\">fieldName</label>\r\n                        <input type=\"text\" formControlName=\"fieldName\" class=\"form-control\" id=\"fieldName\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"label\">label</label>\r\n                        <input type=\"text\" formControlName=\"label\" class=\"form-control\" id=\"label\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"type\">type</label>\r\n                        <input type=\"text\" formControlName=\"type\" class=\"form-control\" id=\"type\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"display\">display</label>\r\n                        <input type=\"text\" formControlName=\"display\" class=\"form-control\" id=\"display\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"required\">required</label>\r\n                        <input type=\"text\" formControlName=\"required\" class=\"form-control\" id=\"required\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"editable\">editable</label>\r\n                        <input type=\"text\" formControlName=\"editable\" class=\"form-control\" id=\"editable\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"size\">size</label>\r\n                        <input type=\"text\" formControlName=\"size\" class=\"form-control\" id=\"size\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"capitalization\">capitalization</label>\r\n                        <input type=\"text\" formControlName=\"capitalization\" class=\"form-control\" id=\"capitalization\">\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-success\">Salvar</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modalChildren.close()\">Cancelar</button>\r\n        </form>\r\n    </modal-content>\r\n    <modal-footer>\r\n        \r\n    </modal-footer>\r\n</modal>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Modal } from 'src/app/ar-modal/components';\r\n\r\n@Component({\r\n  selector: 'modal-children',\r\n  templateUrl: './modal-children.component.html',\r\n  styleUrls: ['./modal-children.component.css']\r\n})\r\nexport class ModalChildrenComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  @ViewChild('modalChildren') modalChildren:Modal\r\n  @Input('child') child;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    ) { \r\n      this.form = this.formBuilder.group({\r\n        group: null,\r\n        orderResume: null,\r\n        groupResume: null,\r\n        fieldName: null,\r\n        label: null,\r\n        type: null,\r\n        display: null,\r\n        required: null,\r\n        mask: null,\r\n        editable: null,\r\n        size: null,\r\n        capitalization: null,\r\n      });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    const child = this.child;\r\n    this.form.patchValue({\r\n      group: child.group,\r\n      orderResume: child.orderResume,\r\n      groupResume: child.groupResume,\r\n      fieldName: child.fieldName,\r\n      label: child.label,\r\n      type: child.type,\r\n      display: child.display,\r\n      required: child.required,\r\n      mask: child.mask,\r\n      editable: child.editable,\r\n      size: child.size,\r\n      capitalization: child.capitalization,\r\n    })\r\n  }\r\n  \r\n  open(): void{\r\n    this.modalChildren.open();\r\n  }\r\n\r\n  save() {\r\n    this.child = this.form.value;\r\n    this.modalChildren.close();\r\n  }\r\n\r\n  public setChild(child) {\r\n    this.child = child;\r\n  }\r\n}","<modal #modalNewField>\r\n    <modal-content>\r\n        <form [formGroup]=\"form\" (submit)=\"onConfirm()\" #ngForm=\"ngForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"name\">Nome do Campo</label>\r\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"name\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"type\">Tipo do Campo</label>\r\n                        <select id=\"type\" formControlName=\"type\" class=\"form-control\">\r\n                            <option [ngValue]=\"null\">Selecione</option>\r\n                            <option [ngValue]=\"'text'\">Text</option>\r\n                            <option [ngValue]=\"'dropdown'\">dropdown</option>\r\n                            <option [ngValue]=\"'dropdownwithchildren'\">dropdownwithchildren</option>\r\n                            <option [ngValue]=\"'boolwithchildren'\">boolwithchildren</option>\r\n                            <option [ngValue]=\"'bool'\">bool</option>\r\n                            <option [ngValue]=\"'slide'\">slide</option>\r\n                            <option [ngValue]=\"'number'\">number</option>\r\n                            <option [ngValue]=\"'checkbox'\">checkbox</option>\r\n                            <option [ngValue]=\"'checklist'\">checklist</option>\r\n                            <option [ngValue]=\"'image'\">image</option>\r\n                            <option [ngValue]=\"'signature'\">signature</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </modal-content>\r\n    <modal-footer>\r\n        <button type=\"button\" class=\"btn btn-danger\" \r\n        [attr.disabled]=\"form.get('name').value && form.get('type').value ? null : true\" (click)=\"onConfirm()\">Sim</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modalNewField.close()\">Não</button>\r\n    </modal-footer>\r\n</modal>","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { Modal } from 'src/app/ar-modal/components';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'modal-new-field',\r\n  templateUrl: './modal-new-field.component.html',\r\n  styleUrls: ['./modal-new-field.component.css']\r\n})\r\nexport class ModalNewFieldComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  @ViewChild('modalNewField') modalNewField:Modal\r\n  @Output('confirm') confirm: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    ) { \r\n      this.form = this.formBuilder.group({\r\n        name: [null, Validators.required],\r\n        type: [null, Validators.required],\r\n      });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  open(): void{\r\n    this.modalNewField.open();\r\n  }\r\n\r\n  onConfirm(){\r\n    if(this.form.valid) {\r\n      this.confirm.emit(this.form.value);\r\n      this.modalNewField.close()\r\n    }\r\n      \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","<modal #modalTranslations class=\"modal-translations\">\r\n    <modal-content>\r\n            <div class=\"row\" *ngFor=\"let translation of translations\">\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"group\">Label</label>\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"translation.label\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"group\">PT</label>\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"translation.portuguese\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"group\">EN</label>\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"translation.english\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-col-form-label\" for=\"group\">ES</label>\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"translation.spanish\">\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modalTranslations.close()\">Cancelar</button>\r\n    </modal-content>\r\n    <modal-footer>\r\n        \r\n    </modal-footer>\r\n</modal>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Modal } from 'src/app/ar-modal/components';\r\nimport { Translation } from 'src/app/components/main/model/Translation';\r\n\r\n@Component({\r\n  selector: 'modal-translations',\r\n  templateUrl: './modal-translations.component.html',\r\n  styleUrls: ['./modal-translations.component.css']\r\n})\r\nexport class ModalTranslationsComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  @ViewChild('modalTranslations') modalTranslations:Modal\r\n  @Input('labels') labels;\r\n  public translations: Array<Translation> = []; \r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.labels.forEach(label => {\r\n      this.translations.push(new Translation(label));\r\n    });\r\n  }\r\n  \r\n  open(): void{\r\n    this.modalTranslations.open();\r\n  }\r\n\r\n  save() {\r\n    this.labels = this.form.value;\r\n    this.modalTranslations.close();\r\n  }\r\n\r\n  public setChild(child) {\r\n    this.labels = child;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ModalNewFieldComponent } from './components/modal-new-field/modal-new-field.component';\r\nimport { ModalModule } from '../ar-modal/components';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { ModalChildrenComponent } from './components/modal-children/modal-children.component';\r\nimport { ModalTranslationsComponent } from './components/modal-translations/modal-translations.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ModalNewFieldComponent, ModalChildrenComponent, ModalTranslationsComponent],\r\n  exports: [ModalNewFieldComponent, ModalChildrenComponent, ModalTranslationsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ModalModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class CustomFormUtilsModule { }\r\n","import { FieldBase } from './field-base';\r\n\r\nexport class BooleanField extends FieldBase {\r\n\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class BooleanWithChildrenField extends FieldBase {\r\n    children: Array<any>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.children = [];\r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class CheckBoxField extends FieldBase {\r\n\r\n    items: Array<any>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.type = \"checkbox\"; \r\n        this.items = [];\r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class ChecklListField extends FieldBase {\r\n    children: Array<any>\r\n\r\n    constructor() {\r\n        super();\r\n        this.children = [];       \r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class DropdownField extends FieldBase {\r\n\r\n    isSingleSelection: boolean\r\n    items: Array<any>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.type = \"dropdown\"; \r\n        this.isSingleSelection = false;  \r\n        this.items = [];\r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class DropdownWithChildren extends FieldBase {\r\n    triggers: Array<any>\r\n    items: Array<any>\r\n    children: Array<any>\r\n\r\n    constructor() {\r\n        super();\r\n        this.triggers = [];\r\n        this.items = [];\r\n        this.children = [];       \r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class ImageField extends FieldBase {\r\n\r\n    constructor() {\r\n        super();\r\n        this.type = \"image\";     \r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class NumberField extends FieldBase {\r\n    mask: string;\r\n    editable: boolean;\r\n    size: number;\r\n    capitalization: boolean;\r\n    rightSymbol: string\r\n\r\n    constructor() {\r\n        super();\r\n        this.type = \"number\";\r\n        this.mask = null;\r\n        this.editable = true;\r\n        this.size = null;\r\n        this.capitalization = true;\r\n        this.rightSymbol = null;        \r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class SignatureField extends FieldBase {\r\n\r\n    constructor() {\r\n        super();\r\n        this.type = \"signature\";     \r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class SlideField extends FieldBase {\r\n    min: string;\r\n    max: string;\r\n    value: string;\r\n    division: string;\r\n\r\n    constructor() {\r\n        super();\r\n        this.min = null;\r\n        this.max = null;\r\n        this.value = null;\r\n        this.division =null;\r\n        this.type = \"slide\";\r\n    }\r\n}","import { FieldBase } from './field-base';\r\n\r\nexport class TextField extends FieldBase {\r\n    mask: string;\r\n    editable: boolean;\r\n    size: number;\r\n    capitalization: boolean;\r\n\r\n    constructor() {\r\n        super();\r\n        this.mask = null;\r\n        this.editable = true;\r\n        this.size = null;\r\n        this.capitalization = true;\r\n    }\r\n}"," export class FieldBase {\r\n        group: number;\r\n        orderResume: number;\r\n        groupResume: number;\r\n        fieldName: string;\r\n        label: string;\r\n        type: string\r\n        display: boolean;\r\n        required: boolean;\r\n\r\n        constructor() {\r\n              this.group = null;\r\n              this.orderResume = null;\r\n              this.groupResume = null;\r\n              this.fieldName = null;\r\n              this.label = null;\r\n              this.type = null;\r\n              this.display = true;\r\n              this.required = true;\r\n        }\r\n }","export class Field {\r\n    name?: string;\r\n    type?: string;\r\n    jsonObject?:Object[];\r\n    constructor(name?: string, type?: string, jsonObject?:Object[]){\r\n        this.name = name;\r\n        this.type = type;\r\n        this.jsonObject = jsonObject;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KeysPipe } from './keys.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [KeysPipe],\r\n  exports: [KeysPipe],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class PipesModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}